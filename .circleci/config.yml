version: 2
jobs:
    build:
        docker:
            - image: circleci/python
        environment:
            ARM_NONE_EABI: /home/circleci/gcc-arm-none-eabi-7-2018-q2-update
        steps:
            - checkout
            - restore_cache:
                key: arm-none-eabi-
            - run:
                working_directory: /home/circleci/
                name: install arm-nonoe-eabi
                command: |
                    if [ ! -d gcc-arm-none-eabi-7-2018-q2-update ]; then
                        wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz
                        tar xvf gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz
                        rm gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz
                    fi
            - save_cache:
                key: arm-none-eabi-{{ checksum "/home/circleci/gcc-arm-none-eabi-7-2018-q2-update/bin/arm-none-eabi-gcc" }}
                paths:
                    - /home/circleci/gcc-arm-none-eabi-7-2018-q2-update
            - run:
                name: build
                command: make -C pca10040/blank/armgcc/
            # - run:
            #     name: build-unit-test
            #     command: test/make
            - run:
                name: setup
                command: |
                    virtualenv --python=python2 venv
                    . venv/bin/activate
                    pip install -r requirements.txt
            - run:
                name: setup-keys
                command: |
                    echo $ROOT_CA > root-CA.crt
                    echo $TEMP_SENSOR_CERT > pca10040/TemperatureSensor.cert.pem
                    echo $TEMP_SENSOR_KEY > pca10040/TemperatureSensor.private.key
            - persist_to_workspace:
                root: .
                paths:
                    - pca10040/blank/armgcc/_build
                    - venv
                    - pca10040/TemperatureSensor.cert.pem
                    - pca10040/TemperatureSensor.private.key
            - store_artifacts:
                path: pca10040/blank/armgcc/_build
    test-1:
        docker:
            - image: circleci/python
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: config
                command: |
                    mkdir ~/.jumper/
                    echo $VLAB_USER_CONFIG > ~/.jumper/config.json
            - run:
                name: test-1
                command: |
                    . venv/bin/activate
                    nosetests --rednose -v test/test_runner_1.py
    test-2:
        docker:
            - image: circleci/python
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: config
                command: |
                    mkdir ~/.jumper/
                    echo $VLAB_USER_CONFIG > ~/.jumper/config.json
            - run:
                name: test-2
                command: |
                    . venv/bin/activate
                    nosetests --rednose -v test/test_runner_2.py
    test-3:
        docker:
            - image: circleci/python
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: config
                command: |
                    mkdir ~/.jumper/
                    echo $VLAB_USER_CONFIG > ~/.jumper/config.json
            - run:
                name: test-3
                command: |
                    . venv/bin/activate
                    nosetests --rednose -v test/test_runner_3.py

    test-4:
        docker:
            - image: circleci/python
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: config
                command: |
                    mkdir ~/.jumper/
                    echo $VLAB_USER_CONFIG > ~/.jumper/config.json
            - run:
                name: test-4
                command: |
                    . venv/bin/activate
                    nosetests --rednose -v test/test_runner_4.py

workflows:
    version: 2
    app-button:
        jobs:
            - build:
                context: org-global
            # - system-test:
            #     context: org-global
            #     requires:
            #         - build
            - test-1:
                context: org-global
                requires:
                    - build
            - test-2:
                context: org-global
                requires:
                    - build
            - test-3:
                context: org-global
                requires:
                    - build
            - test-4:
                context: org-global
                requires:
                    - build
